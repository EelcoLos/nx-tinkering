name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Cache nuget packages
        id: cache-nuget
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('apps/**/*.csproj', 'apps/**-test/*.csproj', 'apps/**-integration-test/*.csproj', 'libs/**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('apps/**/*.csproj', 'apps/**-test/*.csproj', 'apps/**-integration-test/*.csproj', 'libs/**/*.csproj') }}

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "e2e-ci" targets have been requested
      - run: npx nx-cloud start-ci-run --distribute-on="3 linux-small-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      - run: export DOTNET_ROOT="$(dirname $(which dotnet))"
        continue-on-error: true
      - name: Install dotnet SDK
        run: |
          npx nx-cloud record -- wget https://download.visualstudio.microsoft.com/download/pr/2e5b5b8e-4e0d-4d6a-8e3e-8f5a8b7b2b6e/0e3c632f6e8a8e6a2e8e8e8e8e8e8e8e/dotnet-sdk-8.0.103-linux-x64.tar.gz
          npx nx-cloud record -- mkdir -p /usr/share/dotnet
          npx nx-cloud record -- tar -zxf dotnet-sdk-8.0.103-linux-x64.tar.gz -C /usr/share/dotnet
          npx nx-cloud record -- export PATH="$PATH:/usr/share/dotnet"
          npx nx-cloud record -- dotnet --version
      - run: npx nx-cloud record -- nx affected -t lint test build
      # - name: Cache Playwright node modules
      #   id: cache-node-playwright-modules
      #   uses: actions/cache@v4
      #   with:
      #     path: node_modules
      #     key: npm-playwright-${{runner.os}}-${{ hashFiles('package-lock.json') }}
      - name: Cache Playwright binary
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
      - name: Install playwright browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx nx-cloud record -- npx playwright install
      - run: npx nx-cloud record -- nx affected --parallel 1 -t e2e-ci
