name: 'PR: Dependabot auto-merge'
on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number'
        required: false
        default: ''

permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot-check:
    name: 'Dependabot Check'
    runs-on: ubuntu-latest
    outputs:
      dependency-names: ${{ steps.metadata.outputs.dependency-names }}
      update-type: ${{ steps.metadata.outputs.update-type }}
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' || github.event.pull_request.user.login == 'eelcolos'}}
    steps:
      - name: Fetch dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.2.0
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          skip-commit-verification: true

  nx-migrate:
    name: 'NX Migrate'
    runs-on: ubuntu-latest
    needs: dependabot-check
    if: ${{ github.event.action == 'opened' && (contains(needs.dependabot-check.outputs.dependency-names, '@nx/') || contains(needs.dependabot-check.outputs.dependency-names, 'nx') || contains(needs.dependabot-check.outputs.dependency-names, '@nx-dotnet/core')) }}
    steps:
      - name: 'Checkout code if nx or nx-dotnet'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: 'Run Nx Migrate if package is NX/NX-Dotnet'
        run: |
          set -e
          set -x
          npm i
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          nx_version=$(npm show @nx/workspace version)
          jq --arg version "$nx_version" '.version = $version' package.json > tmp.$$.json && mv tmp.$$.json package.json || echo "Failed to update package.json version" >&2
          npx nx migrate latest
          npx nx migrate --run-migrations --create-commits
          npx nx migrate @nx-dotnet/core
          npx nx migrate --run-migrations --create-commits
          git add .
          if git diff --quiet HEAD origin/main; then
            echo "No changes to commit"
          else
            git commit -m "chore(nx): Migration items"
            git push origin ${{ github.event.pull_request.head.ref }}
          fi
        working-directory: ${{ github.workspace }}

  auto-merge-and-review:
    name: 'Enable Auto-Merge'
    runs-on: ubuntu-latest
    needs: dependabot-check
    if: ${{ needs.dependabot-check.outputs.update-type == 'version-update:semver-minor' || needs.dependabot-check.outputs.update-type == 'version-update:semver-patch' }}
    steps:
      - name: 'Enable auto-merge for minor/patch updates'
        id: enable-automerge
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Review PR with approval'
        run: |
          gh pr review "$PR_URL" --approve --body "This dependency update can be auto-merged since it's a minor or patch version update."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Comment on PR'
        run: |
          gh pr comment "$PR_URL" --body "This dependency update was not auto-merged as this is a major version update, please review manually."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
