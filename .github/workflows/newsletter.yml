name: Newsletter Distribution

on:
  workflow_dispatch:
    inputs:
      newsletter_file:
        description: 'Path to the newsletter markdown file'
        required: true
        default: 'annoucements/250516 newsletter.md'
        type: string
  push:
    paths:
      - 'annoucements/*.md'
    branches:
      - main

jobs:
  distribute-newsletter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install marked@12.0.2 juice@11.0.1 html-entities@2.5.2 highlight.js@11.9.0

      - name: Convert Markdown to Email-Ready HTML
        id: convert
        run: |
          # Create a conversion script optimized for email clients
          cat > convert.js << 'EOF'
          const fs = require('fs');
          const { marked } = require('marked');
          const juice = require('juice');
          const { encode } = require('html-entities');
          const hljs = require('highlight.js');

          const markdownFile = process.argv[2];
          let markdown = fs.readFileSync(markdownFile, 'utf8');
          
          // Remove GitHub permalink image reference that will be replaced by the email header
          markdown = markdown.replace(/^\[<img[^\]]*\](\([^)]*\))?\s*\n/m, '');

          // Configure marked for email compatibility
          const renderer = new marked.Renderer();

          // Override heading renderer to use proper email-safe styling
          renderer.heading = function(text, level) {
            const fontSize = {
              1: '24px',
              2: '20px', 
              3: '18px',
              4: '16px',
              5: '14px',
              6: '12px'
            };
            
            return `<h${level} style="font-family: Arial, sans-serif; font-size: ${fontSize[level]}; font-weight: bold; color: #003d5c; margin: 20px 0 10px 0; line-height: 1.2;">${text}</h${level}>`;
          };

          // Override paragraph renderer
          renderer.paragraph = function(text) {
            return `<p style="font-family: Arial, sans-serif; font-size: 14px; line-height: 1.6; color: #333333; margin: 0 0 16px 0;">${text}</p>`;
          };

          // Override list renderer
          renderer.list = function(body, ordered) {
            const tag = ordered ? 'ol' : 'ul';
            const listStyle = ordered ? 'decimal' : 'disc';
            return `<${tag} style="font-family: Arial, sans-serif; font-size: 14px; color: #333333; margin: 0 0 16px 0; padding-left: 30px; list-style-type: ${listStyle};">${body}</${tag}>`;
          };

          renderer.listitem = function(text) {
            return `<li style="margin-bottom: 8px; line-height: 1.5;">${text}</li>`;
          };          // Override link renderer for email safety
          renderer.link = function(href, title, text) {
            return `<a href="${href}" style="color: #0066cc; text-decoration: underline;" target="_blank">${text}</a>`;
          };          // Override code block renderer with syntax highlighting
          renderer.code = function(code, language) {
            let highlightedCode;
            let validLanguage = language;
            
            // Helper function to detect Bicep patterns
            function isBicepCode(code) {
              const bicepPatterns = [
                /resource\s+\w+\s+['"][^'"]+['"][^{]*{/,  // resource declarations
                /param\s+\w+\s+\w+/,                      // parameter declarations
                /var\s+\w+\s*=/,                          // variable declarations
                /output\s+\w+\s+\w+\s*=/,                 // output declarations
                /Microsoft\.\w+\/\w+@\d{4}-\d{2}-\d{2}/,  // Azure resource types with API versions
                /properties:\s*{/,                        // properties blocks
                /subscriptionResourceId\(/,               // Bicep functions
                /resourceGroup\(\)/,                      // Bicep functions
                /guid\(/,                                 // Bicep functions
                /scope:\s*\w+/                            // scope property
              ];
              
              return bicepPatterns.some(pattern => pattern.test(code));
            }
            
            try {
              // Check if it's Bicep code (either explicitly marked or detected)
              if (language === 'bicep' || (!language && isBicepCode(code))) {
                // Use JSON highlighting for Bicep since it has similar structure
                highlightedCode = hljs.highlight(code, { language: 'json' }).value;
                validLanguage = 'bicep';
              } else if (language && hljs.getLanguage(language)) {
                // Use the specified language
                highlightedCode = hljs.highlight(code, { language: language }).value;
              } else if (language) {
                // Check if it's actually Bicep but misidentified
                if (isBicepCode(code)) {
                  highlightedCode = hljs.highlight(code, { language: 'json' }).value;
                  validLanguage = 'bicep';
                } else {
                  // Try to auto-detect if specified language isn't supported
                  const autoDetected = hljs.highlightAuto(code);
                  highlightedCode = autoDetected.value;
                  validLanguage = autoDetected.language || language;
                }
              } else {
                // Auto-detect language, but check for Bicep first
                if (isBicepCode(code)) {
                  highlightedCode = hljs.highlight(code, { language: 'json' }).value;
                  validLanguage = 'bicep';
                } else {
                  const autoDetected = hljs.highlightAuto(code);
                  highlightedCode = autoDetected.value;
                  validLanguage = autoDetected.language || 'text';
                }
              }
            } catch (e) {
              // Fallback to plain text if highlighting fails
              highlightedCode = code.replace(/</g, '&lt;').replace(/>/g, '&gt;');
              validLanguage = language || 'text';
            }
            
            const languageLabel = validLanguage ? `<div style="background-color: #405F5C; color: #ffffff; padding: 4px 8px; font-size: 11px; font-weight: bold; text-transform: uppercase; margin-bottom: 0; border-radius: 4px 4px 0 0;">${validLanguage}</div>` : '';
            
            return `<div style="margin: 16px 0;">
              ${languageLabel}
              <pre style="background-color: #f8f9fa; border: 1px solid #e9ecef; border-radius: ${validLanguage ? '0 0 4px 4px' : '4px'}; padding: 12px; margin: 0; overflow-x: auto; font-family: 'Courier New', Consolas, monospace; font-size: 13px; line-height: 1.4; color: #212529; white-space: pre-wrap; word-wrap: break-word;"><code class="hljs">${highlightedCode}</code></pre>
            </div>`;
          };

          // Override inline code renderer
          renderer.codespan = function(code) {
            return `<code style="background-color: #f8f9fa; border: 1px solid #e9ecef; border-radius: 3px; padding: 2px 4px; font-family: 'Courier New', Consolas, monospace; font-size: 12px; color: #e83e8c;">${code.replace(/</g, '&lt;').replace(/>/g, '&gt;')}</code>`;
          };

          marked.setOptions({
            renderer: renderer,
            breaks: true,
            gfm: true,
            headerIds: false,
            mangle: false
          });

          let html = marked(markdown);

          // Create email-optimized HTML structure
          const emailHTML = `
          <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
          <html xmlns="http://www.w3.org/1999/xhtml">
          <head>
            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Platform & Services Newsletter</title>
            <style type="text/css">
              /* Reset styles */
              body, table, td, p, a, li, blockquote { 
                -webkit-text-size-adjust: 100%; 
                -ms-text-size-adjust: 100%; 
              }
              table, td { 
                mso-table-lspace: 0pt; 
                mso-table-rspace: 0pt; 
              }
              img { 
                -ms-interpolation-mode: bicubic; 
                border: 0; 
                height: auto; 
                line-height: 100%; 
                outline: none; 
                text-decoration: none; 
              }
              
              /* Email client specific styles */
              body {
                margin: 0 !important;
                padding: 0 !important;
                background-color: #f4f4f4;
                font-family: Arial, sans-serif;
              }
              
              .email-container {
                max-width: 600px;
                margin: 0 auto;
                background-color: #ffffff;
                border: 1px solid #e0e0e0;
              }              .email-header {
                background-color: #405F5C;
                color: #ffffff;
                padding: 0 0 20px 0;
                text-align: center;
              }
              .email-header img {
                width: 100%;
                max-width: 600px;
                display: block;
                margin: 0 auto 0 auto;
                border-radius: 0 0 12px 12px;
              }
              
              .email-body {
                padding: 30px;
              }
                .email-footer {
                background-color: #f8f9fa;
                padding: 20px;
                text-align: center;
                font-size: 12px;
                color: #6c757d;
              }
                /* Code block styles */
              pre {
                background-color: #f8f9fa !important;
                border: 1px solid #e9ecef !important;
                border-radius: 4px !important;
                padding: 12px !important;
                margin: 16px 0 !important;
                overflow-x: auto !important;
                font-family: 'Courier New', Consolas, monospace !important;
                font-size: 13px !important;
                line-height: 1.4 !important;
                color: #212529 !important;
                white-space: pre-wrap !important;
                word-wrap: break-word !important;
              }
              
              code {
                font-family: 'Courier New', Consolas, monospace !important;
                font-size: 12px !important;
              }
              
              /* Syntax highlighting styles - email-friendly theme */
              .hljs {
                display: block !important;
                overflow-x: auto !important;
                padding: 0 !important;
                color: #212529 !important;
              }
              
              .hljs-comment,
              .hljs-quote {
                color: #6c757d !important;
                font-style: italic !important;
              }
              
              .hljs-keyword,
              .hljs-selector-tag,
              .hljs-subst {
                color: #d73a49 !important;
                font-weight: bold !important;
              }
              
              .hljs-number,
              .hljs-literal,
              .hljs-variable,
              .hljs-template-variable,
              .hljs-tag .hljs-attr {
                color: #005cc5 !important;
              }
              
              .hljs-string,
              .hljs-doctag {
                color: #032f62 !important;
              }
              
              .hljs-title,
              .hljs-section,
              .hljs-selector-id {
                color: #6f42c1 !important;
                font-weight: bold !important;
              }
              
              .hljs-type,
              .hljs-class .hljs-title {
                color: #005cc5 !important;
                font-weight: bold !important;
              }
              
              .hljs-tag,
              .hljs-name,
              .hljs-attribute {
                color: #22863a !important;
                font-weight: normal !important;
              }
              
              .hljs-regexp,
              .hljs-link {
                color: #032f62 !important;
              }
              
              .hljs-symbol,
              .hljs-bullet {
                color: #e36209 !important;
              }
              
              .hljs-built_in,
              .hljs-builtin-name {
                color: #005cc5 !important;
              }
              
              .hljs-meta {
                color: #6c757d !important;
              }
              
              .hljs-deletion {
                background: #ffeef0 !important;
              }
              
              .hljs-addition {
                background: #f0fff4 !important;
              }
              
              .hljs-emphasis {
                font-style: italic !important;
              }
              
              .hljs-strong {
                font-weight: bold !important;
              }
              
              /* Inline code styles */
              p code, li code {
                background-color: #f8f9fa !important;
                border: 1px solid #e9ecef !important;
                border-radius: 3px !important;
                padding: 2px 4px !important;
                color: #e83e8c !important;
              }
              
              /* Mobile responsive */
              @media only screen and (max-width: 600px) {
                .email-container {
                  width: 100% !important;
                  max-width: 100% !important;
                  border-radius: 0 !important;
                }
                .email-body {
                  padding: 10px !important;
                }
                h1, h2, h3, h4, h5, h6 {
                  font-size: 18px !important;
                  margin: 10px 0 5px 0 !important;
                }
                p, li {
                  font-size: 14px !important;
                  margin: 0 0 10px 0 !important;
                }
                pre, code {
                  font-size: 11px !important;
                  padding: 6px !important;
                }
              }
            </style>
          </head>
          <body style="margin: 0; padding: 0; background-color: #f4f4f4;">
            <table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">
              <tr>
                <td>
                  <div class="email-container">
                    <div class="email-header">
                      <img src="cid:brink-header.png" alt="Brink Team Header" style="width:100%;max-width:600px;display:block;margin:0 auto 0 auto;border-radius:0 0 12px 12px;">
                      <div style="padding: 20px 0 0 0;">
                        <span style="font-size: 28px; font-weight: bold; letter-spacing: 1px;">Platform & Services Newsletter</span>
                      </div>
                    </div>
                    <div class="email-body">
                      ${html}
                    </div>
                    <div class="email-footer">
                      <p style="margin: 0;">Dit is een automatisch gegenereerde nieuwsbrief van het Platform & Services team.</p>
                      <p style="margin: 5px 0 0 0;">Heb je vragen? Neem contact met ons op via Teams.</p>
                    </div>
                  </div>
                </td>
              </tr>
            </table>
          </body>
          </html>`;

          // Inline all CSS for maximum email client compatibility
          const inlinedHTML = juice(emailHTML, {
            removeStyleTags: false,
            preserveMediaQueries: true,
            preserveKeyFrames: true
          });

          fs.writeFileSync('newsletter.html', inlinedHTML);

          // Extract title for email subject
          const titleMatch = markdown.match(/^#\s+(.+)$/m);
          const title = titleMatch ? titleMatch[1] : 'Platform & Services Newsletter';
          console.log(`NEWSLETTER_TITLE=${title}`);

          // Get date from filename
          const filename = markdownFile.split('/').pop();
          const dateMatch = filename.match(/(\d{6})/);
          const date = dateMatch ? dateMatch[1] : new Date().toISOString().slice(0, 10).replace(/-/g, '');
          console.log(`NEWSLETTER_DATE=${date}`);
          EOF

          node convert.js "${{ github.event.inputs.newsletter_file || 'annoucements/250516 newsletter.md' }}"

          # Extract outputs from the conversion script
          TITLE=$(node convert.js "${{ github.event.inputs.newsletter_file || 'annoucements/250516 newsletter.md' }}" | grep "NEWSLETTER_TITLE=" | cut -d'=' -f2-)
          DATE=$(node convert.js "${{ github.event.inputs.newsletter_file || 'annoucements/250516 newsletter.md' }}" | grep "NEWSLETTER_DATE=" | cut -d'=' -f2-)

          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Generate Teams Card Format
        id: teams-card
        run: |
          # Create the Teams Adaptive Card JSON for upload
          cat > teams-card.json << 'EOF'
          {
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "type": "AdaptiveCard",
                  "version": "1.3",
                  "body": [
                    {
                      "type": "Container",
                      "style": "accent",
                      "items": [
                        {
                          "type": "ColumnSet",
                          "columns": [
                            {
                              "type": "Column",
                              "width": "auto",
                              "items": [
                                {
                                  "type": "Image",
                                  "url": "https://github.com/favicon.ico",
                                  "size": "Small"
                                }
                              ]
                            },
                            {
                              "type": "Column",
                              "width": "stretch",
                              "items": [
                                {
                                  "type": "TextBlock",
                                  "text": "📰 Nieuwe Newsletter Beschikbaar",
                                  "weight": "Bolder",
                                  "size": "Medium",
                                  "color": "Light"
                                },
                                {
                                  "type": "TextBlock",
                                  "text": "Platform & Services Team",
                                  "size": "Small",
                                  "color": "Light",
                                  "spacing": "None"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "Container",
                      "items": [
                        {
                          "type": "TextBlock",
                          "text": "De nieuwste Platform & Services newsletter is beschikbaar! 📄",
                          "wrap": true,
                          "size": "Medium",
                          "spacing": "Medium"
                        },
                        {
                          "type": "TextBlock",
                          "text": "*Email verzending is tijdelijk uitgeschakeld. Download de HTML versie via de artifact link hieronder.*",
                          "wrap": true,
                          "isSubtle": true,
                          "style": "emphasis",
                          "spacing": "Small"
                        }
                      ]
                    },
                    {
                      "type": "FactSet",
                      "facts": [
                        {
                          "title": "Titel:",
                          "value": "${{ steps.convert.outputs.title }}"
                        },
                        {
                          "title": "Datum:",
                          "value": "${{ steps.convert.outputs.date }}"
                        },
                        {
                          "title": "Repository:",
                          "value": "${{ github.repository }}"
                        },
                        {
                          "title": "HTML Artifact:",
                          "value": "newsletter-${{ steps.convert.outputs.date }}"
                        }
                      ],
                      "spacing": "Medium"
                    }
                  ],
                  "actions": [
                    {
                      "type": "Action.OpenUrl",
                      "title": "📂 Bekijk in Repository",
                      "url": "${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/${{ github.event.inputs.newsletter_file || 'annoucements/250516 newsletter.md' }}"
                    },
                    {
                      "type": "Action.OpenUrl",
                      "title": "⬇️ Download HTML Artifact",
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              }
            ]
          }
          EOF

          # Create Teams markdown format
          cat > teams-card.md << 'EOF'
          # 📰 Platform & Services Newsletter

          ## ${{ steps.convert.outputs.title }}

          **Datum:** ${{ steps.convert.outputs.date }}  
          **Repository:** ${{ github.repository }}  
          **HTML Artifact:** newsletter-${{ steps.convert.outputs.date }}

          ---

          De nieuwste Platform & Services newsletter is beschikbaar! 📄

          *Email verzending is tijdelijk uitgeschakeld. Download de HTML versie via de artifact link hieronder.*

          ### Acties
          - [Bekijk in Repository](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/${{ github.event.inputs.newsletter_file || 'annoucements/250516 newsletter.md' }})
          - [Download HTML Artifact](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ---
          *Platform & Services Team*
          EOF

      - name: Upload Newsletter Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: newsletter-${{ steps.convert.outputs.date }}
          path: |
            newsletter.html
            teams-card.json
            teams-card.md
          retention-days: 30 # - name: Send Email Newsletter
      #   uses: dawidd6/action-send-mail@v3
      #   with:
      #     server_address: smtp.gmail.com
      #     server_port: 587
      #     username: ${{ secrets.SMTP_USERNAME }}
      #     password: ${{ secrets.SMTP_PASSWORD }}
      #     subject: '${{ steps.convert.outputs.title }} - ${{ steps.convert.outputs.date }}'
      #     to: ${{ secrets.NEWSLETTER_RECIPIENTS }}
      #     from: 'Platform & Services Team <${{ secrets.SMTP_USERNAME }}>'
      #     html_body: file://newsletter.html
      #     convert_markdown: false

      # - name: Post to Microsoft Teams
      #   uses: skitionek/notify-microsoft-teams@master
      #   with:
      #     webhook_url: ${{ secrets.TEAMS_WEBHOOK_URL }}
      #     raw: |
      #       {
      #         "type": "message",
      #         "attachments": [
      #           {
      #             "contentType": "application/vnd.microsoft.card.adaptive",
      #             "content": {
      #               "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
      #               "type": "AdaptiveCard",
      #               "version": "1.3",
      #               "body": [
      #                 {
      #                   "type": "Container",
      #                   "style": "accent",
      #                   "items": [
      #                     {
      #                       "type": "ColumnSet",
      #                       "columns": [
      #                         {
      #                           "type": "Column",
      #                           "width": "auto",
      #                           "items": [
      #                             {
      #                               "type": "Image",
      #                               "url": "https://github.com/favicon.ico",
      #                               "size": "Small"
      #                             }
      #                           ]
      #                         },
      #                         {
      #                           "type": "Column",
      #                           "width": "stretch",
      #                           "items": [
      #                             {
      #                               "type": "TextBlock",
      #                               "text": "📰 Nieuwe Newsletter Beschikbaar",
      #                               "weight": "Bolder",
      #                               "size": "Medium",
      #                               "color": "Light"
      #                             },
      #                             {
      #                               "type": "TextBlock",
      #                               "text": "Platform & Services Team",
      #                               "size": "Small",
      #                               "color": "Light",
      #                               "spacing": "None"
      #                             }
      #                           ]
      #                         }
      #                       ]
      #                     }
      #                   ]
      #                 },
      #                 {
      #                   "type": "Container",
      #                   "items": [
      #                     {
      #                       "type": "TextBlock",
      #                       "text": "De nieuwste Platform & Services newsletter is beschikbaar! 📄",
      #                       "wrap": true,
      #                       "size": "Medium",
      #                       "spacing": "Medium"
      #                     },
      #                     {
      #                       "type": "TextBlock",
      #                       "text": "*Email verzending is tijdelijk uitgeschakeld. Download de HTML versie via de artifact link hieronder.*",
      #                       "wrap": true,
      #                       "isSubtle": true,
      #                       "style": "emphasis",
      #                       "spacing": "Small"
      #                     }
      #                   ]
      #                 },
      #                 {
      #                   "type": "FactSet",
      #                   "facts": [
      #                     {
      #                       "title": "Titel:",
      #                       "value": "${{ steps.convert.outputs.title }}"
      #                     },
      #                     {
      #                       "title": "Datum:",
      #                       "value": "${{ steps.convert.outputs.date }}"
      #                     },
      #                     {
      #                       "title": "Repository:",
      #                       "value": "${{ github.repository }}"
      #                     },
      #                     {
      #                       "title": "HTML Artifact:",
      #                       "value": "newsletter-${{ steps.convert.outputs.date }}"
      #                     }
      #                   ],
      #                   "spacing": "Medium"
      #                 }
      #               ],
      #               "actions": [
      #                 {
      #                   "type": "Action.OpenUrl",
      #                   "title": "📂 Bekijk in Repository",
      #                   "url": "${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/${{ github.event.inputs.newsletter_file || 'annoucements/250516 newsletter.md' }}"
      #                 },
      #                 {
      #                   "type": "Action.OpenUrl",
      #                   "title": "⬇️ Download HTML Artifact",
      #                   "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      #                 }
      #               ]
      #             }
      #           }
      #         ]
      #       }
